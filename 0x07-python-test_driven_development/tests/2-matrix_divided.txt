The ``2-matrix_divided module``

=============================

Using ``matrix_divided``

-------------------------

First import matrix_divided from 2-matrix_divided module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[7, 9], [4.5, 12]], 1.5)
	[[4.67, 6.0], [3.0, 8.0]]

	>>> matrix_divided([[7, 9, 12], [4.5, 12, 8]], -2)
	[[-3.5, -4.5, -6.0], [-2.25, -6.0, -4.0]]

	>>> matrix_divided([[7, 9, 12], [4.5, 12, 8]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "str")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided("str", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided((1, 2, 3), 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
